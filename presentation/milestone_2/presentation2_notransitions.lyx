#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{Warsaw}
% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
ValidAlloy
\begin_inset Argument
status open

\begin_layout Plain Layout
ValidAlloy
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subtitle
A tool for validating Alloy specifications using test-case generation
\end_layout

\begin_layout Author
José Pinheiro, pg23208 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Tiago Guimarães, pg22832 
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Give the names in the same order as the appear in the paper.
 
\end_layout

\begin_layout Itemize
Use the 
\begin_inset Quotes eld
\end_inset

Institute mark
\begin_inset Quotes erd
\end_inset

 inset (
\family sans
Insert\SpecialChar \menuseparator
Custom Insets\SpecialChar \menuseparator
InstituteMark
\family default
) only if the authors have different affiliations.
\end_layout

\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
J.Pinheiro, T.Guimarães
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
- optional, use only with lots of authors
\end_layout

\begin_layout Plain Layout
- if there are really lots of authors, use 
\begin_inset Quotes eld
\end_inset

Author et al.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Institute
Escola de Engenharia, Departamento de Informática
\begin_inset Newline newline
\end_inset

Universidade do Minho
\end_layout

\begin_layout Date
Milestone 2, 2012/04/04
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pgfdeclareimage[height=0.5cm]{Universidade do Minho}{umlogo.jpg}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
logo{
\backslash
pgfuseimage{Universidade do Minho}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Recalling Milestone 1 
\end_layout

\begin_layout Subsection
What is ValidAlloy?
\begin_inset Argument
status open

\begin_layout Plain Layout
What is ValidAlloy?
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Model validation trough test case generation
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../viewer.png
	scale 35

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Work Done in Milestone 1
\end_layout

\begin_layout Itemize
It generated:
\end_layout

\begin_deeper
\begin_layout Enumerate
Filesystem from an Alloy instance;
\end_layout

\begin_layout Enumerate
Git repository;
\end_layout

\begin_layout Enumerate
Git Objects(blobs).
\end_layout

\end_deeper
\begin_layout Standard
Our goal is to get an accurate Git Model.
\end_layout

\begin_layout Subsection
Objectives Proposed
\end_layout

\begin_layout BeginFrame
Objectives Proposed
\end_layout

\begin_layout Itemize
Finish testbench:
\end_layout

\begin_layout Itemize
Create all the Git objects.
\end_layout

\begin_deeper
\begin_layout Itemize
Compare results of Git commands with the modeled version in Alloy.
\end_layout

\end_deeper
\begin_layout Itemize
Actually improve the model.
\end_layout

\begin_layout Itemize
Check properties of Git.
\end_layout

\begin_layout BeginFrame
Objectives Proposed
\end_layout

\begin_layout Itemize
Finish testbench (Done):
\end_layout

\begin_layout Itemize
Create all the Git objects (Done).
\end_layout

\begin_deeper
\begin_layout Itemize
Compare results of Git commands with the modeled version in Alloy (Done
 for git add and git rm).
\end_layout

\end_deeper
\begin_layout Itemize
Actually improve the model (Not Yet).
 
\end_layout

\begin_layout Itemize
Check properties of Git (Some).
\end_layout

\begin_layout Section
ValidAlloy
\end_layout

\begin_layout Subsection
Git Testbench
\end_layout

\begin_layout BeginFrame
Git Testbench
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/jpinheiro/Desktop/validalloy.png
	scale 35

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Generic
\end_layout

\begin_layout Itemize
Use of a config file, to config the testbench to generate the instances
 from the wanted command.
\end_layout

\begin_layout Itemize
Use of Antlr(Another tool for language recognition), to parse the config
 file.
\end_layout

\begin_layout Itemize
Associates a given predicate that exists in the model, to an actual git
 command.
\end_layout

\begin_layout BeginFrame
Example Config File
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
#p : path
\end_layout

\begin_layout Plain Layout
pred rm[#p]
\end_layout

\begin_layout Plain Layout
scope for 5 but exactly 2 State
\end_layout

\begin_layout Plain Layout
cmd git rm #p
\end_layout

\begin_layout Plain Layout
runs 100
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Demo
\end_layout

\begin_layout Itemize
We will now show a running demo of validAlloy, with the git rm config file.
\end_layout

\begin_layout BeginFrame
git add
\end_layout

\begin_layout Itemize
The first git command that we gave to our testebench was git add.
\end_layout

\begin_layout Itemize
We found no differences between the pre state and post state.
\end_layout

\begin_layout Itemize
We assume it is our model is imcomplete and at the moment we cant find any
 strange behavior from git add.
\end_layout

\begin_layout BeginFrame
git rm 
\end_layout

\begin_layout Itemize
The second command we gave our testbench was git rm.
\end_layout

\begin_layout Itemize
Our rm predicate is still not complete, because git rm is not so simple
 to model.
\end_layout

\begin_deeper
\begin_layout Itemize
The problem is to determine the status of the staged file
\end_layout

\end_deeper
\begin_layout Itemize
But even with an incomplete predicate of rm we found already some strange
 behavior from git rm.
\end_layout

\begin_layout BeginFrame
git rm 
\end_layout

\begin_layout Itemize
One of the strange behavior that can be exemplified with this trace:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
$ git init
\end_layout

\begin_layout Plain Layout
$ mkdir D
\end_layout

\begin_layout Plain Layout
$ echo 
\begin_inset Quotes eld
\end_inset

Hi
\begin_inset Quotes erd
\end_inset

 > D/F
\end_layout

\begin_layout Plain Layout
$ git add D/F
\end_layout

\begin_layout Plain Layout
$ rm -r D
\end_layout

\begin_layout Plain Layout
$ echo 
\begin_inset Quotes eld
\end_inset

Hey
\begin_inset Quotes erd
\end_inset

 > D
\end_layout

\begin_layout Plain Layout
$ git rm D/F
\end_layout

\begin_layout Plain Layout
warning : 'D/F': Not a directory
\end_layout

\begin_layout Plain Layout
rm 'D/F'
\end_layout

\begin_layout Plain Layout
fatal: git rm: 'D/F': Not a directory
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout BeginFrame
git rm 
\end_layout

\begin_layout Itemize
If we instead did:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
$ git init
\end_layout

\begin_layout Plain Layout
$ mkdir D
\end_layout

\begin_layout Plain Layout
$ echo 
\begin_inset Quotes eld
\end_inset

Hi
\begin_inset Quotes erd
\end_inset

 > D/F
\end_layout

\begin_layout Plain Layout
$ git add D/F
\end_layout

\begin_layout Plain Layout
$ rm -r D
\end_layout

\begin_layout Plain Layout
$ echo 
\begin_inset Quotes eld
\end_inset

Hey
\begin_inset Quotes erd
\end_inset

 > F
\end_layout

\begin_layout Plain Layout
$ git rm D/F
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
This works as expected.
\end_layout

\begin_layout BeginFrame
git rm 
\end_layout

\begin_layout Itemize
We asked at 
\begin_inset CommandInset href
LatexCommand href
name "git@vger.kernel.org"
target "git@vger.kernel.org"

\end_inset

, if this was the correct behavior from git rm.
\end_layout

\begin_layout Itemize
In the first reply, they suggested a patch for it.
\end_layout

\begin_layout Itemize
The other interesting behavior is that git rm removes empty directorys from
 the filesystem.
\end_layout

\begin_layout Subsection
Future Work
\end_layout

\begin_layout BeginFrame
Future Work
\end_layout

\begin_layout Itemize
Model more git commands.
\end_layout

\begin_layout Itemize
Improve the git model.
\end_layout

\begin_layout Itemize
Find more git bugs.
\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
